name: Release tagged build

on:
  push:
    tags: [ '*' ]
  workflow_dispatch:
    buildid:
      description: 'build id/number'
      required: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      RELEASE_VERSION: ${{ github.event.inputs.buildid || github.ref_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 32
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: adjust version string
        run: sed -i -E 's/^(version = ")([^"]+)(")/\1\2-'"${RELEASE_VERSION}"'\3/' build.gradle

      - name: Build the mod
        run: ./gradlew --no-daemon build

      - name: Delete old release if it already exists
        run: gh release delete --yes "${RELEASE_VERSION}"
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release under current tag
        run: |
          export "CHANGELOG_FILE=$(mktemp --suffix=.md)"
          echo "CHANGELOG_FILE=${CHANGELOG_FILE}" >> $GITHUB_ENV
          gh api --method POST -H "Accept: application/vnd.github+json" \
            "/repos/${GITHUB_REPOSITORY}/releases/generate-notes" \
            -f tag_name="${RELEASE_VERSION}" \
            --jq ".body" > "${CHANGELOG_FILE}"
          cat "${CHANGELOG_FILE}"
          gh release create "${RELEASE_VERSION}" -F "${CHANGELOG_FILE}" ./build/libs/*.jar
        shell: bash
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

